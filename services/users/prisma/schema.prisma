generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  name          String
  birthDate     DateTime?
  gender        String?
  phoneNumber   String?
  address       Address?
  healthProfile HealthProfile?
  families      FamilyMember[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@map("users")
}

model Address {
  id           String  @id @default(uuid())
  street       String
  number       String
  complement   String?
  neighborhood String
  city         String
  state        String
  country      String
  zipCode      String
  userId       String  @unique
  user         User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("addresses")
}

model HealthProfile {
  id                String   @id @default(uuid())
  bloodType         String?
  allergies         String[]
  chronicConditions String[]
  medications       String[]
  userId            String   @unique
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("health_profiles")
}

model Family {
  id        String        @id @default(uuid())
  name      String
  members   FamilyMember[]
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt

  @@map("families")
}

model FamilyMember {
  id       String @id @default(uuid())
  userId   String
  familyId String
  role     String
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  family   Family @relation(fields: [familyId], references: [id], onDelete: Cascade)

  @@unique([userId, familyId])
  @@map("family_members")
} 